apiVersion: "recommender.com/v1"
kind: "KruizeLayer"
metadata:
  name: "hotspot"
layer_name: hotspot
layer_level: 1
details: hotspot tunables
layer_presence:
  queries:
  - datasource: 'prometheus'
    query: 'jvm_memory_used_bytes{area="heap",id=~".+Eden.+"}'
    key: pod
  - datasource: 'prometheus'
    query: 'jvm_memory_used_bytes{area="heap",id=~".+Tenured.+"}'
    key: pod
  - datasource: 'prometheus'
    query: 'jvm_memory_used_bytes{area="heap",id=~".+Old.+"}'
    key: pod
  - datasource: 'prometheus'
    query: 'jvm_memory_used_bytes{area="heap",id=~"Eden.+"}'
    key: pod
  - datasource: 'prometheus'
    query: 'jvm_memory_used_bytes{area="heap",id=~"Tenured.+"}'
    key: pod
  - datasource: 'prometheus'
    query: 'jvm_memory_used_bytes{area="heap",id=~"Old.+"}'
    key: pod
tunables:
# Enable zGC if Java >=17
- name: gc
  description: 'Garbage collection policy'
  value_type: categorical
  choices:
    - 'G1GC'
    - 'ParallelGC'
    - 'SerialGC'
    - 'ShenandoahGC'
    - 'ZGC'
  queries:
  - datasource: 'prometheus'
    query: 'sum(jvm_memory_used_bytes{area="heap", $CONTAINER_LABEL$="$CONTAINER$", $POD_LABEL$="$POD$"})'
  slo_class:
    - response_time
    - throughput
    - resource_usage

- name: MaxInlineLevel
  description: 'maximum number of nested calls that are inlined. Default is 9'
  value_type: integer
  upper_bound: '50'
  lower_bound: '9'
  step: 1
  slo_class:
  - response_time
  - throughput

- name: FreqInlineSize
  description: 'The maximum bytecode size of a frequent method to be inlined. Default is 325'
  value_type: integer
  upper_bound: '500'
  lower_bound: '325'
  step: 1
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: MinInliningThreshold
  description: 'The minimum invocation count a method needs to have to be inlined. Default is 250'
  value_type: integer
  upper_bound: '200'
  lower_bound: '0'
  step: 1
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: CompileThreshold
  description: 'number of interpreted method invocations before (re-)compiling. Default is 1500'
  value_type: integer
  upper_bound: '10000'
  lower_bound: '1000'
  step: 10
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: CompileThresholdScaling
  description: 'Factor to control when first compilation happens. Default is 1.0'
  value_type: double
  upper_bound: '15'
  lower_bound: '1'
  step: 0.1
  slo_class:
  - response_time
  - throughput
  - resource_usage

# Commenting it as it's dependent on ParallelGCThreads
# ConcGCThreads dependent on ParallelGCThreads. JVM exits if ParallelGCThreads < ConcGCThreads.
# Upper bound is based on cpus and ParallelGCThreads.
#- name: ConcGCThreads
#  description: 'Number of threads concurrent gc will use. Default is 0'
#  value_type: integer
#  upper_bound: '8'
#  lower_bound: '0'
#  step: 1
#  slo_class:
#  - response_time
#  - throughput
#  - resource_usage

- name: InlineSmallCode
  description: 'Only inline already compiled methods if their code size is less than this. Default is 1000'
  value_type: integer
  upper_bound: '5000'
  lower_bound: '500'
  step: 5
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: LoopUnrollLimit
  description: 'Unroll loop bodies with node count less than this. Default is 50'
  value_type: integer
  upper_bound: '250'
  lower_bound: '20'
  step: 1
  slo_class:
  - response_time
  - throughput

- name: LoopUnrollMin
  description: 'Minimum number of unroll loop bodies before checking progress of rounds of unroll,optimize,..Default is 4'
  value_type: integer
  upper_bound: '20'
  lower_bound: '0'
  step: 1
  slo_class:
  - response_time
  - throughput

- name: MinSurvivorRatio
  description: 'Minimum ratio of young generation/survivor space size. Default is 3'
  value_type: integer
  upper_bound: '48'
  lower_bound: '3'
  step: 1
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: NewRatio
  description: 'Ratio of old/new generation sizes. Default is 2'
  value_type: integer
  upper_bound: '10'
  lower_bound: '1'
  step: 1
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: TieredStopAtLevel
  description: 'Stop at given compilation level. Default is 4'
  value_type: integer
  upper_bound: '4'
  lower_bound: '0'
  step: 1
  slo_class:
  - response_time
  - throughput

# Commenting it as it's dependent on MaxHeapFreeRatio
#- name: MinHeapFreeRatio
#  description: 'minimum percentage of heap free after GC to avoid expansion. Default is 40'
#  value_type: integer
#  upper_bound: '70'
#  lower_bound: '5'
#  step: 1
#  slo_class:
#  - response_time
#  - throughput
#  - resource_usage

# Commenting it as it's dependent on MinHeapFreeRatio
# lowerbound should be >= upperbound of MinHeapFreeRatio
#- name: MaxHeapFreeRatio
#  description: 'The maximum percentage of heap free after GC to avoid shrinking. Default is 70'
#  value_type: integer
#  upper_bound: '100'
#  lower_bound: '20'
#  step: 1
#  slo_class:
#  - response_time
#  - throughput
#  - resource_usage

# Recommended value for OpenJDK containers is 4.
- name: GCTimeRatio
  description: 'Adaptive size policy application time to GC time ratio. Default is 99'
  value_type: integer
  upper_bound: '100'
  lower_bound: '1'
  step: 1
  slo_class:
  - response_time
  - throughput
  - resource_usage

# Recommended value for OpenJDK containers is 90.
- name: AdaptiveSizePolicyWeight
  description: 'Weight given to exponential resizing, between 0 and 100. Default is 10'
  value_type: integer
  upper_bound: '100'
  lower_bound: '1'
  step: 1
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: TieredCompilation
  description: 'Enable tiered compilation. Default is false'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: AllowParallelDefineClass
  description: 'Allow parallel defineClass requests for class loaders registering as parallel capable. Default is false'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: AllowVectorizeOnDemand
  description: 'Globally supress vectorization set in VectorizeMethod. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput

- name: AlwaysCompileLoopMethods
  description: 'When using recompilation, never interpret methods containing loops. Default is false'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput

- name: AlwaysPreTouch
  description: 'Force all freshly committed pages to be pre-touched. Default is false'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: AlwaysTenure
  description: 'Always tenure objects in eden (ParallelGC only). Default is false'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: BackgroundCompilation
  description: 'A thread requesting compilation is not blocked during compilation. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: DoEscapeAnalysis
  description: 'Perform escape analysis. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput

- name: UseInlineCaches
  description: 'Use Inline Caches for virtual calls. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: UseLoopPredicate
  description: 'Generate a predicate to select fast/slow loop versions. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput

- name: UseStringDeduplication
  description: 'Use string deduplication. Default is false'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
  - resource_usage

- name: UseSuperWord
  description: 'Transform scalar operations into superword operations. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput

- name: UseTypeSpeculation
  description: 'Speculatively propagate types from profiles. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput

- name: StackTraceInThrowable
  description: 'Collect backtrace in throwable when exception happens. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
  - resource_usage

# Set as -Dio.netty.buffer.checkBounds=<> -Dio.netty.buffer.checkAccessible=<>
- name: nettyBufferCheck
  description: 'Collect backtrace in throwable when exception happens. Default is true'
  value_type: categorical
  choices:
    - 'true'
    - 'false'
  slo_class:
  - response_time
  - throughput
