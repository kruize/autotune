apiVersion: v1
kind: Namespace
metadata:
  name: openshift-tuning
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kruize-sa
  namespace: openshift-tuning
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: autotune-scc-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
  - kind: ServiceAccount
    name: kruize-sa
    namespace: openshift-tuning
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: manual
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume  # Sets PV's name
  namespace: openshift-tuning
  labels:
    type: local  # Sets PV's type to local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi # Sets PV Volume
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim  # Sets name of PVC
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany  # Sets read and write access
  resources:
    requests:
      storage: 1Gi  # Sets volume size
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kruizeconfig
  namespace: openshift-tuning
data:
  dbconfigjson: |
    {
      "database": {
        "adminPassword": "admin",
        "adminUsername": "admin",
        "hostname": "postgres-service",
        "name": "kruizeDB",
        "password": "admin",
        "port": 5432,
        "sslMode": "require",
        "username": "admin"
      }
    }
  kruizeconfigjson: |
    {
      "clustertype": "kubernetes",
      "k8stype": "openshift",
      "authtype": "",
      "monitoringagent": "prometheus",
      "monitoringservice": "prometheus-k8s",
      "monitoringendpoint": "prometheus-k8s",
      "savetodb": "true",
      "dbdriver": "jdbc:postgresql://",
      "hibernate": {
        "dialect": "org.hibernate.dialect.PostgreSQLDialect",
        "driver": "org.postgresql.Driver",
        "c3p0minsize": 2,
        "c3p0maxsize": 5,
        "c3p0timeout": 300,
        "c3p0maxstatements": 50,
        "hbm2ddlauto": "update",
        "showsql": "false",
        "timezone": "UTC"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: kruize-sa
      containers:
        - name: postgres
          image: postgres:15.2
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_DB
              value: kruizeDB
            - name: PGDATA
              value: /var/lib/pg_data
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/pgsql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - name: postgres-port
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kruize
  labels:
    app: kruize
  namespace: openshift-tuning
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kruize
  template:
    metadata:
      labels:
        app: kruize
        name: kruize
    spec:
      serviceAccountName: kruize-sa
      containers:
        - name: kruize
          image: kruize/autotune_operator:0.0.16_rm
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: LOGGING_LEVEL
              value: "info"
            - name: ROOT_LOGGING_LEVEL
              value: "error"
            - name: DB_CONFIG_FILE
              value: "/etc/config/dbconfigjson"
            - name: KRUIZE_CONFIG_FILE
              value: "/etc/config/kruizeconfigjson"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=80"
          resources:
            requests:
              memory: "4Gi"
              cpu: "4"
            limits:
              memory: "8Gi"
          ports:
            - name: kruize-port
              containerPort: 8080
      #          livenessProbe:
      #            exec:
      #              command:
      #                - sh
      #                - -c
      #                - chmod +x /home/autotune/app/target/bin/TestDBConnection && /home/autotune/app/target/bin/TestDBConnection
      #            initialDelaySeconds: 10
      #            periodSeconds: 5
      #            timeoutSeconds: 20
      volumes:
        - name: config-volume
          configMap:
            name: kruizeconfig
---
apiVersion: v1
kind: Service
metadata:
  name: kruize
  namespace: openshift-tuning
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
  labels:
    app: kruize
spec:
  type: NodePort
  selector:
    app: kruize
  ports:
    - name: kruize-port
      port: 8080
      targetPort: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kruize-service-monitor
  namespace: openshift-tuning
  labels:
    app: kruize
spec:
  selector:
    matchLabels:
      app: kruize
  endpoints:
    - port: kruize-port
      interval: 30s
      path: /metrics
