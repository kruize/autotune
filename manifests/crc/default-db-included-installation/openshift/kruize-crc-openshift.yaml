apiVersion: v1
kind: Namespace
metadata:
  name: openshift-tuning
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kruize-sa
  namespace: openshift-tuning
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: autotune-scc-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
  - kind: ServiceAccount
    name: kruize-sa
    namespace: openshift-tuning
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: manual
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume  # Sets PV's name
  namespace: openshift-tuning
  labels:
    type: local  # Sets PV's type to local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi # Sets PV Volume
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim  # Sets name of PVC
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany  # Sets read and write access
  resources:
    requests:
      storage: 1Gi  # Sets volume size
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kruizeconfig
  namespace: openshift-tuning
data:
  dbconfigjson: |
    {
      "database": {
        "adminPassword": "admin",
        "adminUsername": "admin",
        "hostname": "postgres-service",
        "name": "kruizeDB",
        "password": "admin",
        "port": 5432,
        "sslMode": "require",
        "username": "admin"
      }
    }
  kruizeconfigjson: |
    {
      "clustertype": "kubernetes",
      "k8stype": "openshift",
      "authtype": "",
      "monitoringagent": "prometheus",
      "monitoringservice": "prometheus-k8s",
      "monitoringendpoint": "prometheus-k8s",
      "savetodb": "true",
      "dbdriver": "jdbc:postgresql://",
      "hibernate": {
        "dialect": "org.hibernate.dialect.PostgreSQLDialect",
        "driver": "org.postgresql.Driver",
        "c3p0minsize": 5,
        "c3p0maxsize": 10,
        "c3p0timeout": 300,
        "c3p0maxstatements": 100,
        "hbm2ddlauto": "none",
        "showsql": "false",
        "timezone": "UTC"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: kruize-sa
      containers:
        - name: postgres
          image: quay.io/kruizehub/postgres:15.2
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_DB
              value: kruizeDB
            - name: PGDATA
              value: /var/lib/pg_data
          resources:
            requests:
              memory: "10Gi"
              cpu: "2"
            limits:
              memory: "30Gi"
              cpu: "2"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/pgsql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - name: postgres-port
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kruize
  labels:
    app: kruize
  namespace: openshift-tuning
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kruize
  template:
    metadata:
      labels:
        app: kruize
        name: kruize
    spec:
      serviceAccountName: kruize-sa
      containers:
        - name: kruize
          image: kruize/autotune_operator:0.0.20.1_rm
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: LOGGING_LEVEL
              value: "info"
            - name: ROOT_LOGGING_LEVEL
              value: "error"
            - name: DB_CONFIG_FILE
              value: "/etc/config/dbconfigjson"
            - name: KRUIZE_CONFIG_FILE
              value: "/etc/config/kruizeconfigjson"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=80"
          resources:
            requests:
              memory: "4Gi"
              cpu: "2"
            limits:
              memory: "8Gi"
              cpu: "2"
          ports:
            - name: kruize-port
              containerPort: 8080
      #          livenessProbe:
      #            exec:
      #              command:
      #                - sh
      #                - -c
      #                - chmod +x /home/autotune/app/target/bin/TestDBConnection && /home/autotune/app/target/bin/TestDBConnection
      #            initialDelaySeconds: 10
      #            periodSeconds: 5
      #            timeoutSeconds: 20
      volumes:
        - name: config-volume
          configMap:
            name: kruizeconfig
---
apiVersion: v1
kind: Service
metadata:
  name: kruize
  namespace: openshift-tuning
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
  labels:
    app: kruize
spec:
  type: NodePort
  selector:
    app: kruize
  ports:
    - name: kruize-port
      port: 8080
      targetPort: 8080
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: create-partition-cronjob
  namespace: openshift-tuning
spec:
  schedule: "0 0 25 * *" # Run on 25th of every month at midnight
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: kruizecronjob
              image: kruize/autotune_operator:0.0.20.1_rm
              imagePullPolicy: Always
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/config
              command:
                - sh
                - -c
                - |
                  /home/autotune/app/target/bin/CreatePartition
              args: [ "" ]
              env:
                - name: START_AUTOTUNE
                  value: "false"
                - name: LOGGING_LEVEL
                  value: "info"
                - name: ROOT_LOGGING_LEVEL
                  value: "error"
                - name: DB_CONFIG_FILE
                  value: "/etc/config/dbconfigjson"
                - name: KRUIZE_CONFIG_FILE
                  value: "/etc/config/kruizeconfigjson"
          volumes:
            - name: config-volume
              configMap:
                name: kruizeconfig
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: delete-partition-cronjob
  namespace: openshift-tuning
spec:
  schedule: "0 0 25 * *" # Run on 25th of every month at midnight
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: kruizedeletejob
              image: kruize/autotune_operator:0.0.20.1_rm
              imagePullPolicy: Always
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/config
              command:
                - sh
                - -c
                - |
                  /home/autotune/app/target/bin/RetentionPartition
              args: [ "" ]
              env:
                - name: START_AUTOTUNE
                  value: "false"
                - name: LOGGING_LEVEL
                  value: "info"
                - name: ROOT_LOGGING_LEVEL
                  value: "error"
                - name: DB_CONFIG_FILE
                  value: "/etc/config/dbconfigjson"
                - name: KRUIZE_CONFIG_FILE
                  value: "/etc/config/kruizeconfigjson"
                - name: deletepartitionsthreshold
                  value: "15"
          volumes:
            - name: config-volume
              configMap:
                name: kruizeconfig
          restartPolicy: OnFailure
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kruize-service-monitor
  namespace: openshift-tuning
  labels:
    app: kruize
spec:
  selector:
    matchLabels:
      app: kruize
  endpoints:
    - port: kruize-port
      interval: 30s
      path: /metrics
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: openshift-tuning
data:
  nginx.conf: |
    events {}
    http {
      upstream kruize-api {
        server kruize:8080;
      }

      server {
        listen 8080;
        server_name localhost;

        root   /usr/share/nginx/html;
    
        location ^~ /api/ {
          rewrite ^/api(.*)$ $1 break;
          proxy_pass http://kruize-api;
        }
    
        location / {
          index index.html;
          error_page 404 =200 /index.html;
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: kruize-ui-nginx-service
  namespace: openshift-tuning
spec:
  type: NodePort
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: kruize-ui-nginx
---
apiVersion: v1
kind: Pod
metadata:
  name: kruize-ui-nginx-pod
  namespace: openshift-tuning
  labels:
    app: kruize-ui-nginx
spec:
  containers:
    - name: kruize-ui-nginx-container
      image: quay.io/kruize/kruize-ui:0.0.3
      imagePullPolicy: Always
      env:
        - name: KRUIZE_UI_ENV
          value: "production"
      volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
  volumes:
    - name: nginx-config-volume
      configMap:
        name: nginx-config

