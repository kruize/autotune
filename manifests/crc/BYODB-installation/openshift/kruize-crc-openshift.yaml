apiVersion: v1
kind: Namespace
metadata:
  name: openshift-tuning
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kruize-monitoring-view
subjects:
  - kind: ServiceAccount
    name: kruize-sa
    namespace: openshift-tuning
roleRef:
  kind: ClusterRole
  name: cluster-monitoring-view
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kruizeconfig
  namespace: openshift-tuning
data:
  dbconfigjson: |
    {
      "database": {
        "adminPassword": "admin",
        "adminUsername": "admin",
        "hostname": "kruize-db-service",
        "name": "kruizeDB",
        "password": "admin",
        "port": 5432,
        "sslMode": "require",
        "username": "admin"
      }
    }
  kruizeconfigjson: |
    {
      "clustertype":"kubernetes",
      "k8stype": "openshift",
      "authtype": "",
      "monitoringagent": "prometheus",
      "monitoringservice": "prometheus-k8s",
      "monitoringendpoint": "prometheus-k8s",
      "savetodb": "true",
      "dbdriver": "jdbc:postgresql://",
      "plots": "true",
      "logAllHttpReqAndResp": "true",
      "recommendationsURL" : "http://kruize.openshift-tuning.svc.cluster.local:8080/generateRecommendations?experiment_name=%s",
      "experimentsURL" : "http://kruize.openshift-tuning.svc.cluster.local:8080/createExperiment",
      "isKafkaEnabled" : "false",
      "hibernate": {
        "dialect": "org.hibernate.dialect.PostgreSQLDialect",
        "driver": "org.postgresql.Driver",
        "c3p0minsize": 5,
        "c3p0maxsize": 10,
        "c3p0timeout": 300,
        "c3p0maxstatements": 100,
        "hbm2ddlauto": "none",
        "showsql": "false",
        "timezone": "UTC"
      },
      "logging" : {
        "cloudwatch": {
          "accessKeyId": "",
          "logGroup": "kruize-logs",
          "logStream": "kruize-stream",
          "region": "",
          "secretAccessKey": "",
          "logLevel": "INFO"
        }
      },
      "datasource": [
        {
          "name": "prometheus-1",
          "provider": "prometheus",
          "serviceName": "prometheus-k8s",
          "namespace": "openshift-monitoring",
          "url": "",
          "authentication": {
            "type": "bearer",
            "credentials": {
              "tokenFilePath": "/var/run/secrets/kubernetes.io/serviceaccount/token"
            }
          }
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kruize
  labels:
    app: kruize
  namespace: openshift-tuning
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kruize
  template:
    metadata:
      labels:
        app: kruize
        name: kruize
    spec:
      initContainers:
        - name: wait-for-kruize-db
          image: quay.io/kruizehub/postgres:15.2 # Use the same Postgres version as the Postgres deployment
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              until pg_isready -h kruize-db-service -p 5432 -U admin; do
                echo "Waiting for kruize-db-service to be ready..."
                sleep 2
              done
      containers:
        - name: kruize
          image: kruize/autotune_operator:0.6
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: LOGGING_LEVEL
              value: "info"
            - name: ROOT_LOGGING_LEVEL
              value: "error"
            - name: DB_CONFIG_FILE
              value: "/etc/config/dbconfigjson"
            - name: KRUIZE_CONFIG_FILE
              value: "/etc/config/kruizeconfigjson"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kruize-kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
            - name: KAFKA_TOPICS
              value: "recommendations-topic,error-topic,summary-topic"
            - name: KAFKA_RESPONSE_FILTER_INCLUDE
              value: "summary"
            - name: KAFKA_RESPONSE_FILTER_EXCLUDE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              memory: "768Mi"
              cpu: "0.7"
            limits:
              memory: "768Mi"
              cpu: "0.7"
          ports:
            - name: kruize-port
              containerPort: 8080
      #          livenessProbe:
      #            exec:
      #              command:
      #                - sh
      #                - -c
      #                - chmod +x /home/autotune/app/target/bin/TestDBConnection && /home/autotune/app/target/bin/TestDBConnection
      #            initialDelaySeconds: 10
      #            periodSeconds: 5
      #            timeoutSeconds: 20
      volumes:
        - name: config-volume
          configMap:
            name: kruizeconfig
---
apiVersion: v1
kind: Service
metadata:
  name: kruize
  namespace: openshift-tuning
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
  labels:
    app: kruize
spec:
  type: NodePort
  selector:
    app: kruize
  ports:
    - name: kruize-port
      port: 8080
      targetPort: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kruize-service-monitor
  namespace: openshift-tuning
  labels:
    app: kruize
spec:
  selector:
    matchLabels:
      app: kruize
  endpoints:
    - port: kruize-port
      interval: 30s
      path: /metrics
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: openshift-tuning
data:
  nginx.conf: |
    events {}
    http {
      upstream kruize-api {
        server kruize:8080;
      }

      server {
        listen 8080;
        server_name localhost;

        root   /usr/share/nginx/html;
    
        location ^~ /api/ {
          rewrite ^/api(.*)$ $1 break;
          proxy_pass http://kruize-api;
        }
    
        location / {
          index index.html;
          error_page 404 =200 /index.html;
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: kruize-ui-nginx-service
  namespace: openshift-tuning
spec:
  type: NodePort
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: kruize-ui-nginx
---
apiVersion: v1
kind: Pod
metadata:
  name: kruize-ui-nginx-pod
  namespace: openshift-tuning
  labels:
    app: kruize-ui-nginx
spec:
  containers:
    - name: kruize-ui-nginx-container
      image: quay.io/kruize/kruize-ui:0.0.8
      imagePullPolicy: Always
      env:
        - name: KRUIZE_UI_ENV
          value: "production"
      volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
  volumes:
    - name: nginx-config-volume
      configMap:
        name: nginx-config

