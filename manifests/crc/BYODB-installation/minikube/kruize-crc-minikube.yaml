apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kruizeconfig
  namespace: monitoring
data:
  dbconfigjson: |
    {
      "database": {
        "adminPassword": "admin",
        "adminUsername": "admin",
        "hostname": "postgres-service",
        "name": "kruizeDB",
        "password": "admin",
        "port": 5432,
        "sslMode": "require",
        "username": "admin"
      }
    }
  krizeconfigjson: |
    {
      "clustertype":"kubernetes",
      "k8stype" : "minikube",
      "authtype": "",
      "monitoringagent":"prometheus",
      "monitoringservice":"prometheus-k8s",
      "monitoringendpoint":"prometheus-k8s",
      "savetodb":"true",
      "dbdriver":"jdbc:postgresql://",
      "hibernate": {
        "dialect": "org.hibernate.dialect.PostgreSQLDialect",
        "driver": "org.postgresql.Driver",
        "c3p0minsize": 2,
        "c3p0maxsize": 5,
        "c3p0timeout": 300,
        "c3p0maxstatements": 50,
        "hbm2ddlauto": "update",
        "showsql": "false",
        "timezone":"UTC"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kruize
  labels:
    app: kruize
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kruize
  template:
    metadata:
      labels:
        app: kruize
        name: kruize
    spec:
      containers:
        - name: kruize
          image: kruize/autotune_operator:0.0.12_rm
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: LOGGING_LEVEL
              value: "info"
            - name: ROOT_LOGGING_LEVEL
              value: "info"
            - name: DB_CONFIG_FILE
              value: "/etc/config/dbconfigjson"
            - name: KRUIZE_CONFIG_FILE
              value: "/etc/config/krizeconfigjson"
          ports:
            - name: kruize-port
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /dbhealth
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 50
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /dbhealth
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 300
            timeoutSeconds: 50
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: config-volume
          configMap:
            name: kruizeconfig
---
apiVersion: v1
kind: Service
metadata:
  name: kruize
  namespace: monitoring
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
  labels:
    app: kruize
spec:
  type: NodePort
  selector:
    app: kruize
  ports:
    - name: kruize-port
      port: 8080
      targetPort: 8080
